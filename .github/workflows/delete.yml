name: Delete old runs
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  delete:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Delete runs
        id: delete
        continue-on-error: true
        run: gh run list --json databaseId -q '.[].databaseId' -w snapshot_check.yml --limit 750 | xargs -IID -P 15 gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
      - name: Delete runs
        if: steps.delete.outcome == 'failure'
        id: delete2
        continue-on-error: true
        run: gh run list --json databaseId -q '.[].databaseId' -w snapshot_check.yml --limit 750 | xargs -IID -P 15 gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
      - name: Delete runs
        if: steps.delete2.outcome == 'failure'
        id: delete3
        continue-on-error: true
        run: gh run list --json databaseId -q '.[].databaseId' -w snapshot_check.yml --limit 750 | xargs -IID -P 15 gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
